apiVersion: apps/v1
kind: Deployment
metadata:
  name: stammdaten
  labels:
    app: ase-stammdaten
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ase-stammdaten
  template:
    metadata:
      labels:
        app: ase-stammdaten
    spec:
      containers:
        - name: ase-stammdaten
          image: ghcr.io/agile-software-engineering-25/team-11-backend-stammdatenverwaltung:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "300m"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 20
          env: # environment variables for production
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: SERVER_PORT
              value: "8080"
            - name: SERVER_SERVLET_CONTEXT_PATH
              value: "/"
            - name: DATABASE_URL
              value: "jdbc:postgresql://postgres.db:5432/appdb"
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: KEYCLOAK_ISSUER_URI
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: KEYCLOAK_ISSUER_URI
            - name: KEYCLOAK_JWK_SET_URI
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: KEYCLOAK_JWK_SET_URI
            # NOTE: The Ingress in this overlay contains a rewrite-target annotation
            # (traefik.ingress.kubernetes.io/rewrite-target: /) which rewrites requests
            # from /api -> /. Because of that, the application will receive requests
            # at the root path and must NOT set server.servlet.context-path=/api.
            # If you prefer the application to serve under /api, remove the rewrite
            # annotation from the Ingress and then set SERVER_SERVLET_CONTEXT_PATH=/api here.