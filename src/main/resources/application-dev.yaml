spring:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        '[format_sql]': true
  datasource:
    # H2 file-based database with PostgreSQL compatibility mode
    # MODE=PostgreSQL: enables PostgreSQL-compatible syntax
    # DATABASE_TO_LOWER=TRUE: converts unquoted identifiers to lowercase (PostgreSQL behavior)
    # DEFAULT_NULL_ORDERING=HIGH: NULL values sort last (PostgreSQL default)
    url: jdbc:h2:mem:./data/devdb;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH
    driverClassName: org.h2.Driver
    username: sa
    password: password
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: false
  flyway:
    enabled: true
    # Common migrations first, then H2-specific
    locations: classpath:db/migration/common,classpath:db/migration/h2
    baseline-on-migrate: true
    validate-on-migrate: true
  security:
    oauth2:
      resourceserver:
        jwt:
          # Development Keycloak instance (optional, can be overridden)
          issuer-uri: ${KEYCLOAK_ISSUER_URI:https://keycloak.sau-portal.de/realms/sau}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:https://keycloak.sau-portal.de/realms/sau/protocol/openid-connect/certs}

server:
  port: 8080

management:
  endpoint:
    health:
      show-details: always

logging:
  level:
    '[com.ase.stammdatenverwaltung]': DEBUG
    '[org.springframework.security]': DEBUG

# Note: JWT roles are extracted from the "groups" claim automatically
# No additional JWT configuration needed for role extraction
