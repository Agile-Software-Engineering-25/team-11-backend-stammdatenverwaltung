-- Create the person hierarchy using joined table inheritance
-- Implements a comprehensive master data management system for Persons, Students, Employees, and Lecturers
-- This structure supports collaboration with Team 10's database using shared IDs

-- Create the main persons table (base table for inheritance hierarchy)
CREATE TABLE persons (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    date_of_birth DATE NOT NULL,
    address VARCHAR(500),
    phone_number VARCHAR(20),
    photo_url VARCHAR(1000),
    
    -- Add constraints (H2-compatible syntax)
    CONSTRAINT chk_date_of_birth_not_future CHECK (date_of_birth <= CURRENT_DATE),
    CONSTRAINT chk_phone_number_format CHECK (phone_number IS NULL OR REGEXP_LIKE(phone_number, '^[+]?[0-9\s\-()]{7,20}$'))
);

-- Create the students table (inherits from persons)
CREATE TABLE students (
    person_id BIGINT PRIMARY KEY,
    matriculation_number VARCHAR(20) NOT NULL UNIQUE,
    degree_program VARCHAR(200),
    semester INTEGER,
    study_status VARCHAR(20) NOT NULL,
    cohort VARCHAR(50),
    
    -- Foreign key constraint
    CONSTRAINT fk_students_person_id FOREIGN KEY (person_id) REFERENCES persons (id) ON DELETE CASCADE,
    
    -- Add constraints
    CONSTRAINT chk_semester_positive CHECK (semester IS NULL OR semester > 0),
    CONSTRAINT chk_semester_reasonable CHECK (semester IS NULL OR semester <= 20),
    CONSTRAINT chk_study_status_valid CHECK (study_status IN ('ENROLLED', 'REGISTERED', 'ON_LEAVE', 'EXMATRICULATED', 'GRADUATED'))
);

-- Create the employees table (inherits from persons)
CREATE TABLE employees (
    person_id BIGINT PRIMARY KEY,
    employee_number VARCHAR(20),
    department VARCHAR(200),
    office_number VARCHAR(50),
    working_time_model VARCHAR(20),
    
    -- Foreign key constraint
    CONSTRAINT fk_employees_person_id FOREIGN KEY (person_id) REFERENCES persons (id) ON DELETE CASCADE,
    
    -- Add constraints
    CONSTRAINT chk_working_time_model_valid CHECK (working_time_model IS NULL OR working_time_model IN 
        ('FULL_TIME', 'PART_TIME', 'MINI_JOB', 'CONTRACT', 'TEMPORARY', 'INTERNSHIP')),
    
    -- Unique constraint on employee number if it exists
    CONSTRAINT uk_employees_employee_number UNIQUE (employee_number)
);

-- Create the lecturers table (inherits from employees, which inherits from persons)
CREATE TABLE lecturers (
    person_id BIGINT PRIMARY KEY,
    field_chair VARCHAR(300),
    title VARCHAR(50),
    employment_status VARCHAR(30),
    
    -- Foreign key constraint (references employees, not persons directly)
    CONSTRAINT fk_lecturers_person_id FOREIGN KEY (person_id) REFERENCES employees (person_id) ON DELETE CASCADE,
    
    -- Add constraints
    CONSTRAINT chk_employment_status_valid CHECK (employment_status IS NULL OR employment_status IN 
        ('FULL_TIME_PERMANENT', 'PART_TIME_PERMANENT', 'EXTERNAL', 'VISITING', 'CONTRACT', 'EMERITUS', 'ASSISTANT', 'ASSOCIATE', 'PROFESSOR'))
);

-- Create indexes for performance optimization
CREATE INDEX idx_students_matriculation_number ON students (matriculation_number);
CREATE INDEX idx_students_cohort ON students (cohort);
CREATE INDEX idx_students_study_status ON students (study_status);
CREATE INDEX idx_students_semester ON students (semester);

CREATE INDEX idx_employees_employee_number ON employees (employee_number);
CREATE INDEX idx_employees_department ON employees (department);
CREATE INDEX idx_employees_office_number ON employees (office_number);
CREATE INDEX idx_employees_working_time_model ON employees (working_time_model);

CREATE INDEX idx_lecturers_field_chair ON lecturers (field_chair);
CREATE INDEX idx_lecturers_title ON lecturers (title);
CREATE INDEX idx_lecturers_employment_status ON lecturers (employment_status);

CREATE INDEX idx_persons_date_of_birth ON persons (date_of_birth);
CREATE INDEX idx_persons_phone_number ON persons (phone_number);

-- Add comments for documentation
COMMENT ON TABLE persons IS 'Main table for all person types using joined table inheritance';
COMMENT ON TABLE students IS 'Student-specific data, inherits from persons via person_id';
COMMENT ON TABLE employees IS 'Employee-specific data, inherits from persons via person_id';
COMMENT ON TABLE lecturers IS 'Lecturer-specific data, inherits from employees (and transitively from persons)';

COMMENT ON COLUMN persons.id IS 'Primary key that must match Team 10 database ID for collaboration';
COMMENT ON COLUMN persons.date_of_birth IS 'Date of birth with age validation constraints';
COMMENT ON COLUMN persons.phone_number IS 'Phone number with international format validation';

COMMENT ON COLUMN students.person_id IS 'Foreign key to persons table (joined inheritance)';
COMMENT ON COLUMN students.matriculation_number IS 'Unique student identification number';
COMMENT ON COLUMN students.study_status IS 'Current enrollment status of the student';
COMMENT ON COLUMN students.semester IS 'Current semester number (1-20)';

COMMENT ON COLUMN employees.person_id IS 'Foreign key to persons table (joined inheritance)';
COMMENT ON COLUMN employees.employee_number IS 'Optional employee identification number';
COMMENT ON COLUMN employees.working_time_model IS 'Employment type and working hours model';

COMMENT ON COLUMN lecturers.person_id IS 'Foreign key to employees table (multi-level inheritance)';
COMMENT ON COLUMN lecturers.employment_status IS 'Type of lecturer employment (permanent, external, etc.)';
COMMENT ON COLUMN lecturers.field_chair IS 'Academic field or chair assignment';