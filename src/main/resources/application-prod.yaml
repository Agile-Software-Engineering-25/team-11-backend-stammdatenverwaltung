spring:
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    hibernate:
      ddl-auto: validate
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/stammdatenverwaltung}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:password}
    driverClassName: org.postgresql.Driver
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
  security:
    oauth2:
      resourceserver:
        jwt:
          # Production Keycloak instance (required)
          issuer-uri: ${KEYCLOAK_ISSUER_URI}
          # Validate audience claim for API access
          audiences:
            - ${KEYCLOAK_API_AUDIENCE:stammdatenverwaltung-api}

server:
  port: ${SERVER_PORT:8080}

management:
  endpoint:
    health:
      show-details: when-authorized
  endpoints:
    web:
      exposure:
        include: health,info

logging:
  level:
    '[com.ase.stammdatenverwaltung]': INFO
    '[org.springframework.security]': WARN

# Application-specific JWT configuration
app:
  security:
    jwt:
      # Validate audience claim for API access (required in production)
      audience: ${KEYCLOAK_API_AUDIENCE}
      # Client ID for extracting client-specific roles (required in production)
      client-id: ${KEYCLOAK_CLIENT_ID}
      # Extract roles from realm access (global roles)
      extract-realm-roles: true
      # Extract roles from resource access (client-specific roles)
      extract-client-roles: true
