<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <!-- Define the charset -->
    <property name="charset" value="UTF-8"/>

    <!-- Suppress magic numbers in test files using regex -->
    <module name="SuppressionSingleFilter">
        <property name="checks" value="MagicNumber"/>
        <property name="files" value=".*[/\\]test[/\\].*\.java$"/>
    </module>

    <!-- === TreeWalker module processes Java source code === -->
    <module name="TreeWalker">

        <!-- =============================================== -->
        <!-- LOGIC & COMPLEXITY RULES (No Formatting Rules) -->
        <!-- =============================================== -->

        <!-- === NAMING CONVENTIONS === -->
        
        <!-- Classes and Interfaces: PascalCase, noun phrases -->
        <module name="TypeName">
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
        </module>

        <!-- Methods: camelCase, verb phrases -->
        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <!-- Variables: camelCase, descriptive -->
        <module name="LocalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <!-- Constants: ALL_CAPS with underscores -->
        <module name="ConstantName">
            <property name="format" value="^[A-Z][A-Z0-9_]*$"/>
        </module>

        <!-- Type parameters (generics): Single uppercase letter -->
        <module name="ClassTypeParameterName">
            <property name="format" value="^[A-Z]$"/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="^[A-Z]$"/>
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="^[A-Z]$"/>
        </module>

        <!-- Packages: lowercase, dot separated -->
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>

        <!-- === CODE QUALITY & LOGIC === -->

        <!-- Unused local variables -->
        <module name="UnusedLocalVariable">
            <property name="allowUnnamedVariables" value="false"/>
        </module>

        <!-- Unused imports -->
        <module name="UnusedImports"/>

        <!-- Avoid magic numbers -->
        <module name="MagicNumber">
            <!-- Common numbers that are almost never "magic" -->
            <property name="ignoreNumbers" value="-1,0,1,2,3,4,5,10,100,1000"/>
            <!-- Standard contexts where numbers are acceptable -->
            <property name="ignoreHashCodeMethod" value="true"/>
            <property name="ignoreAnnotation" value="true"/>
            <property name="ignoreFieldDeclaration" value="true"/>
            <!-- Mathematical and common operations where literals are clear -->
            <property name="constantWaiverParentToken" value="ASSIGN,ARRAY_INIT,EXPR,UNARY_PLUS,UNARY_MINUS,TYPECAST,ELIST,LITERAL_NEW,METHOD_CALL,STAR,DIV,PLUS,MINUS,MOD"/>
        </module>

        <!-- === CONTROL FLOW & COMPLEXITY === -->

        <!-- Require braces on all control statements -->
        <module name="NeedBraces">
            <property name="tokens" value="LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO"/>
        </module>

        <!-- Switch statements must have break, return or comment fall-through -->
        <module name="FallThrough"/>

        <!-- One statement per line -->
        <module name="OneStatementPerLine"/>

        <!-- Cyclomatic complexity -->
        <module name="CyclomaticComplexity">
            <property name="max" value="10"/>
            <property name="switchBlockAsSingleDecisionPoint" value="true"/>
        </module>

        <!-- Method length -->
        <module name="MethodLength">
            <property name="max" value="50"/>
            <property name="countEmpty" value="false"/>
        </module>

        <!-- Parameter count -->
        <module name="ParameterNumber">
            <property name="max" value="7"/>
            <property name="ignoreOverriddenMethods" value="true"/>
        </module>

        <!-- Class length -->
        <module name="AnonInnerLength">
            <property name="max" value="20"/>
        </module>

        <!-- === DESIGN PATTERNS & BEST PRACTICES === -->

        <!-- Avoid nested if statements -->
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>

        <!-- Avoid nested try blocks -->
        <module name="NestedTryDepth">
            <property name="max" value="2"/>
        </module>

        <!-- Avoid nested for loops -->
        <module name="NestedForDepth">
            <property name="max" value="3"/>
        </module>

        <!-- Empty blocks -->
        <module name="EmptyBlock">
            <property name="option" value="text"/>
        </module>

        <!-- Empty catch blocks -->
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected|ignore"/>
        </module>

        <!-- Avoid empty statements -->
        <module name="EmptyStatement"/>

        <!-- === SECURITY & COMMON MISTAKES === -->

        <!-- Equals and HashCode -->
        <module name="EqualsHashCode"/>

        <!-- String equality -->
        <module name="StringLiteralEquality"/>

        <!-- Covariant equals -->
        <module name="CovariantEquals"/>

        <!-- === JAVADOC (Optional - for API documentation) === -->

        <!-- Require Javadoc for public methods -->
        <module name="MissingJavadocMethod">
            <property name="scope" value="public"/>
            <property name="allowMissingPropertyJavadoc" value="true"/>
            <property name="ignoreMethodNamesRegex" value="^(get|set|is)[A-Z].*"/>
        </module>

        <!-- Require Javadoc for public classes -->
        <module name="MissingJavadocType">
            <property name="scope" value="public"/>
        </module>

    </module>

    <!-- === FILE-LEVEL CHECKS === -->

    <!-- File length -->
    <module name="FileLength">
        <property name="max" value="500"/>
    </module>

    <!-- No tab characters -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

</module>
